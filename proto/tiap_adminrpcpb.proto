syntax = "proto3";
package tiap_adminrpcpb;

import "gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option java_package = "com.shopee.di.kvstore.proto";

message AdminRequestHeader {
  int64 timestamp = 1;
  string app_name = 2;
  string user     = 3;
}

message AdminResponseHeader {
  string error = 1;
}

message AdminRequest {
  AdminRequestHeader header       = 1;
  oneof req {
    CreateDBRequest create_db_req = 2;
    GetDBRequest get_db_req       = 3;
    ListDBsRequest list_dbs_req   = 4;
    DropDBRequest drop_db_req     = 5;
  }
}

message AdminResponse {
  AdminResponseHeader header        = 1;
  oneof resp {
    CreateDBResponse create_db_resp = 2;
    GetDBResponse get_db_resp       = 3;
    ListDBsResponse list_dbs_resp   = 4;
    DropDBResponse drop_db_resp     = 5;
  }
}

message DBInfo {
  string name   = 1;
  int64 id      = 2;
  SchemaState state = 3;
  DBQuota quota = 4;
  string token  = 5;
  repeated string comments = 6;
}

message TableInfo {
  string name       = 1;
  int64 id          = 2;
  int64 db_id       = 3;
  TableType type    = 5;
  SchemaState state  = 6;
  TableQuota quota  = 7;
  repeated string comments = 8;
  RawTableExtendInfo raw_ext_info = 9;
  HBaseLikeTableExtendInfo hbase_like_ext_info = 10;
}

message RawTableExtendInfo {
}

message HBaseLikeTableExtendInfo {
  bool salted = 1;
  bool multi_version = 2;
  repeated ColumnFamily families = 3;
  int64 max_assign_id = 4;
}

message ColumnFamily {
  string name = 1;
  int64 id = 2;
  SchemaState state = 3;
  repeated Column columns = 4;
}

message Column {
  string name = 1;
  int64 id = 2;
  SchemaState state = 3;
}

enum TableType {
  TypeInvalid   = 0;
  TypeRaw       = 1;
  TypeHBaseLike = 2;
}

enum SchemaState {
  StateInvalid = 0;
  StateCreating = 1;
  StateCreated = 2;
  StateDeleting = 3;
  StateDeleted = 5;
}

message DBQuota {
  uint64 table_number     = 1;
  uint64 storage_capacity = 2;
  uint64 max_qps          = 3;
}

message TableQuota {
  uint64 storage_capacity = 1;
  uint64 max_qps          = 2;
  uint64 max_column_family = 3;
  uint64 max_column_per_family = 4;
  uint64 max_column_version_count = 5;
}

message CreateDBRequest {
  string name   = 1;
  DBQuota quota = 2;
}

message CreateDBResponse {
  string token = 1;
}

message GetDBRequest {
  string name = 1;
}

message GetDBResponse {
  DBInfo info = 1;
}

message ListDBsRequest {
}

message ListDBsResponse {
  repeated DBInfo infos = 1;
}

message DropDBRequest {
  string name = 1;
}

message DropDBResponse {
}
